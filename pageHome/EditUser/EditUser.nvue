<template>
	<view class="content">
		<!-- 头像 -->
		<view class="avatar">
			<view class="text">头像:</view>
			<view class="img-father" @click="upLoad">
				<img
					class="img"
					:style="!useriInfo.avatar ? 'padding: 10px;' : ''"
					:src="useriInfo.avatar ? proxy.$host + useriInfo.avatar : proxy.$host + '/file/download/defaultAvatar.png'"
				/>
			</view>
		</view>
		<!-- 昵称 -->
		<view class="nick-name">
			<view class="text">昵称：</view>
			<view class="input-father">
				<input class="input-nickname" maxlength="6" type="text" v-model="useriInfo.userName" />
			</view>
		</view>
		<!-- 性别 -->
		<view class="sex">
			<view class="text">性别：</view>
			<view class="select">
				<view class="boy" @click="changeSex('男')" :class="useriInfo.userSex == '男' ? 'sex-select-boy' : ''">男</view>
				<view class="girl" @click="changeSex('女')" :class="useriInfo.userSex == '女' ? 'sex-select-girl' : ''">女</view>
			</view>
		</view>
		<!-- 生日 -->
		<view class="birthday">
			<view class="text">生日：</view>
			<view class="birthday-father" @click="openCalendar">
				<view class="input">{{ useriInfo.userBirthday }}</view>
			</view>
		</view>
		<!-- 日历 -->
		<view>
			<uni-calendar ref="calendar" :date="useriInfo.userBirthday" :lunar="true" :insert="false" @confirm="confirm" />
		</view>
		<!-- 身高体重 -->
		<view class="height-weight">
			<view class="height">
				<view class="text">身高（cm）：</view>
				<view class="input-father">
					<input type="number" @change="getStandardWeight" maxlength="3" class="input" v-model="useriInfo.userHeight" />
				</view>
			</view>
			<view class="weight">
				<view class="text">体重（斤）：</view>
				<view class="input-father">
					<input type="number" maxlength="3" @change="getBasaMetabolism" class="input" v-model="useriInfo.userWeight" />
				</view>
			</view>
		</view>

		<!-- 标准身高体重 -->
		<view class="weight-metabolism-standard">
			<view class="height metabolism">
				<view class="text">基础代谢（千卡）：</view>
				<view class="input-father" style="line-height: normal">
					<view class="input">{{ useriInfo.basalMetabolism }}</view>
				</view>
			</view>
			<view class="weight">
				<view class="text">标准体重（斤）：</view>
				<view class="input-father" style="line-height: normal">
					<view class="input">{{ useriInfo.standardWeigth }}</view>
				</view>
			</view>
		</view>
		<!-- 保存 -->
		<view class="save">
			<view class="btn" @click="save">保 存</view>
		</view>
	</view>
</template>

<script setup lang="ts">
import { reactive, ref, getCurrentInstance } from 'vue';
import { onLoad } from '@dcloudio/uni-app';
const { proxy } = getCurrentInstance();
const { $request } = getCurrentInstance().appContext.config.globalProperties;

//获取用户信息
interface USERINFO {
	avatar: string;
	basalMetabolism: string;
	standardWeigth: string;
	token?: string;
	userAge: number;
	userBirthday: string;
	userHeight: string;
	userName: string;
	userPhone: string;
	userSex: string;
	userWeight: string;
}
const useriInfo = ref<USERINFO>(null);
const getUserInfo = async (): Promise<void> => {
	const res = await $request('/user/getUser', 'POST');
	if (res.code === '200') {
		useriInfo.value = res.data;
	}
	console.log(useriInfo.value);
};
//改变性别
const changeSex = (sex: string) => {
	useriInfo.value.userSex = sex;
	getStandardWeight();
	getBasaMetabolism();
};
//生日
const calendar = ref(null);
const openCalendar = () => {
	calendar.value.open();
};

const confirm = (e) => {
	const selectDay = e.fulldate;
	const today = getNowFormatDate();

	if (Date.parse(selectDay) >= Date.parse(today)) {
		uni.showToast({
			icon: 'none',
			title: '生日不能晚于今天'
		});
		return;
	}
	//计算生日
	useriInfo.value.userBirthday = selectDay;
	const todayDate = new Date(today);
	const selectDate = new Date(selectDay);
	useriInfo.value.userAge = todayDate.getFullYear() - selectDate.getFullYear();
	//判断今天月份是否大于生日月份，大于：年龄+1
	todayDate.getTime() >= selectDate.getTime() ? useriInfo.value.userAge++ : null;
	getBasaMetabolism();
};
//获取当前日期函数
const getNowFormatDate = (): string => {
	let date = new Date(),
		year = date.getFullYear(), //获取完整的年份(4位)
		month: number | string = date.getMonth() + 1, //获取当前月份(0-11,0代表1月)
		strDate: number | string = date.getDate(); // 获取当前日(1-31)
	if (month < 10) month = `0${month}`; // 如果月份是个位数，在前面补0
	if (strDate < 10) strDate = `0${strDate}`; // 如果日是个位数，在前面补0

	return `${year}-${month}-${strDate}`;
};

//标准体重
const getStandardWeight = async () => {
	getBasaMetabolism();
	console.log(useriInfo.value.userHeight);
	const height: number = Number.parseFloat(useriInfo.value.userHeight);
	let standardWeigth: number;

	if (useriInfo.value.userSex === '男') {
		standardWeigth = Math.round((height - 80) * 0.7) * 2;
	} else {
		standardWeigth = Math.round((height - 70) * 0.6) * 2;
	}
	useriInfo.value.standardWeigth = standardWeigth >= 0 ? standardWeigth + ' 斤' : '0';
};
//基础代谢
const getBasaMetabolism = async () => {
	const age: number = useriInfo.value.userAge;
	const height: number = Number.parseFloat(useriInfo.value.userHeight);
	const weight: number = Number.parseFloat(useriInfo.value.userWeight);
	let basalMetabolism: number;

	if (useriInfo.value.userSex === '男') {
		basalMetabolism = Math.round((10 * weight) / 2 + 6.25 * height - 5 * age + 5);
	} else {
		basalMetabolism = Math.round((10 * weight) / 2 + 6.25 * height - 5 * age - 161);
	}
	useriInfo.value.basalMetabolism = basalMetabolism >= 0 ? basalMetabolism + ' 千卡' : '0 千卡';
};
//上传头像
const upLoad = () => {
	uni.chooseMedia({
		count: 1,
		mediaType: ['image'],
		sourceType: ['album'],
		success: (res) => {
			uni.uploadFile({
				url: proxy.$host + '/file/upload', //服务器请求接口地址
				filePath: res.tempFiles[0].tempFilePath, //选择的本地路径地址
				fileType: 'image',
				name: 'file',
				header: {
					Authorization: uni.getStorageSync('token')
				},
				success: (res) => {
					if (res.statusCode === 200) {
						const user = uni.getStorageSync('user');
						user.avatar = res.data;
						uni.setStorageSync('user', user);
						useriInfo.value.avatar = res.data;
					} else {
						uni.showToast({
							icon: 'error',
							title: '上传失败'
						});
					}
				}
			});
		}
	});
};
//保存
const save = async () => {
	const res = await $request('/user/saveUpdate', 'POST', useriInfo.value);
	if (res.code === '200') {
		uni.showToast({
			icon: 'success',
			title: '修改成功'
		});
	} else {
		uni.showToast({
			icon: 'error',
			title: res.message
		});
	}
};
onLoad(() => {
	getUserInfo();
});
</script>

<style lang="scss">
@mixin flex-row {
	display: flex;
	flex-direction: row;
}
@mixin text {
	margin-right: 10px;
	font-size: 16px;
	font-weight: 500;
}
@mixin weight-height-standard-metabolism {
	margin-top: $margin-top-20;
	@include flex-row;
	justify-content: center;
	.weight,
	.height {
		width: 50vw;
		.text {
			@include text;
			text-align: left;
			margin-left: 25px;
		}
		.input-father {
			border-radius: 25px;
			line-height: 40px;
			height: 40px;
			padding: 10px 20px;
			margin: 10px 20px;
			background-color: white;
			.input {
				text-align: center;
			}
		}
	}
}
$margin-top-20: 20px;
$margin-top-10: 10px;
.sex-select-girl {
	border: 1px solid crimson;
}

.sex-select-boy {
	border: 1px solid #3376cd;
}

.content {
	width: 100vw;
	height: 100vh;
	padding: 20px;
	background-color: #f8f8f8;
	.avatar {
		@include flex-row;
		.text {
			@include text;
			line-height: 70px;
		}
		.img-father {
			.img {
				width: 70px;
				height: 70px;
				border-radius: 50%;
				border: 1px solid white;
				background-color: white;
			}
		}
	}
	.nick-name {
		margin-top: $margin-top-20;
		@include flex-row;
		width: 100vw;
		.text {
			@include text;
			margin: 0;
			line-height: 40px;
		}
		.input-father {
			margin-top: $margin-top-10;
			height: 40px;
			width: 75vw;
			background-color: white;
			border-radius: 25px;
			.input-nickname {
				width: 100%;
				height: 100%;
				padding: 0 20px;
			}
		}
	}
	.sex {
		margin-top: $margin-top-20;
		.text {
			@include text;
		}
		.select {
			display: flex;
			justify-content: center;
			flex-direction: row;
			.boy,
			.girl {
				margin: 0 10px;
				text-align: center;
				width: 150px;
				height: 40px;
				padding: 10px 20px;
				background-color: white;
				border-radius: 25px;
			}
		}
	}
	.birthday {
		margin-top: $margin-top-20;
		.text {
			@include text;
		}
		.birthday-father {
			margin-top: $margin-top-10;
			height: 40px;
			width: 90vw;
			background-color: white;
			border-radius: 25px;
			.input {
				line-height: 40px;
				width: 100%;
				height: 100%;
				padding: 0 20px;
			}
		}
	}
	.height-weight {
		@include weight-height-standard-metabolism;
	}
	.weight-metabolism-standard {
		@include weight-height-standard-metabolism;
		.input-father {
			.input {
				color: #ccc;
			}
		}
	}
	.save {
		@include flex-row;
		justify-content: center;
		margin-top: 50px;
		.btn {
			color: #b6b6b6;
			padding: 10px 30px;
			border: #ccc 1px solid;
			border-radius: 50px;
			height: 50px;
			width: 70vw;
			text-align: center;
			word-spacing: 1em;
			font-size: 20px;
			transition: 0.1s;
			&:active {
				height: 49px;
				width: 59vw;
			}
		}
	}
}
</style>
